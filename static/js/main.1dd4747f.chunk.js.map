{"version":3,"sources":["components/Card.js","components/Board.js","components/Scoreboard.js","App.js","index.js"],"names":["Card","props","className","onClick","id","name","data-logo","Board","useState","cards","setCards","handleCardClick","event","onCardClick","arrayShuffle","map","card","Scoreboard","currentScore","highScore","App","setCurrentScore","setHighScore","clickedList","setClickedList","clicked","target","dataset","logo","includes","ReactDOM","render","document","getElementById"],"mappings":"4RAGe,SAASA,EAAKC,GAC3B,OACE,qBACEC,UAAU,OACVC,QAASF,EAAME,QACfC,GAAIH,EAAMI,KACVC,YAAWL,EAAMI,KAJnB,SAME,mBAAGH,UAAS,sBAAiBD,EAAMI,MAAQC,YAAWL,EAAMI,S,0BCNnD,SAASE,EAAMN,GAAQ,IAAD,EACTO,mBAAS,CACjC,SACA,WACA,QACA,SACA,YACA,SACA,UACA,WATiC,mBAC5BC,EAD4B,KACrBC,EADqB,KAYnC,SAASC,EAAgBC,GACvBX,EAAMY,YAAYD,GAClBF,EAASI,IAAaL,IAGxB,OACE,qBAAKP,UAAU,QAAf,SACGO,EAAMM,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAAMX,KAAMW,EAAiBb,QAASQ,GAAfK,QCvBhB,SAASC,EAAWhB,GACjC,OACE,gCACE,gDAAmBA,EAAMiB,gBACzB,6CAAgBjB,EAAMkB,gBCDb,SAASC,IAAO,IAAD,EACYZ,mBAAS,GADrB,mBACrBU,EADqB,KACPG,EADO,OAEMb,mBAAS,GAFf,mBAErBW,EAFqB,KAEVG,EAFU,OAGUd,mBAAS,IAHnB,mBAGrBe,EAHqB,KAGRC,EAHQ,KAiB5B,OACE,sBAAKtB,UAAU,YAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,QAAf,UACE,kDACA,qEAEF,cAACe,EAAD,CAAYC,aAAcA,EAAcC,UAAWA,OAErD,cAAC,EAAD,CAAON,YArBa,SAACD,GACvB,IAAMa,EAAUb,EAAMc,OAAOC,QAAQC,KAChCL,EAAYM,SAASJ,IAIpBP,EAAeC,GAAWG,EAAaJ,GAC3CG,EAAgB,GAChBG,EAAe,MALfA,EAAe,GAAD,mBAAKD,GAAL,CAAkBE,KAChCJ,EAAgBH,EAAe,UCTrCY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1dd4747f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/Card.css\";\n\nexport default function Card(props) {\n  return (\n    <div\n      className=\"card\"\n      onClick={props.onClick}\n      id={props.name}\n      data-logo={props.name}\n    >\n      <i className={`icon fab fa-${props.name}`} data-logo={props.name}></i>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Card from \"../components/Card\";\nimport \"../styles/Board.css\";\nimport arrayShuffle from \"array-shuffle\";\n\nexport default function Board(props) {\n  const [cards, setCards] = useState([\n    \"google\",\n    \"facebook\",\n    \"apple\",\n    \"github\",\n    \"pinterest\",\n    \"tiktok\",\n    \"youtube\",\n    \"airbnb\",\n  ]);\n\n  function handleCardClick(event) {\n    props.onCardClick(event);\n    setCards(arrayShuffle(cards));\n  }\n\n  return (\n    <div className=\"board\">\n      {cards.map((card) => (\n        <Card name={card} key={card} onClick={handleCardClick} />\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Scoreboard(props) {\n  return (\n    <div>\n      <p>Current score: {props.currentScore}</p>\n      <p>High score: {props.highScore}</p>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Board from \"./components/Board\";\nimport Scoreboard from \"./components/Scoreboard\";\n\nexport default function App() {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [clickedList, setClickedList] = useState([]);\n\n  const handleCardClick = (event) => {\n    const clicked = event.target.dataset.logo;\n    if (!clickedList.includes(clicked)) {\n      setClickedList([...clickedList, clicked]);\n      setCurrentScore(currentScore + 1);\n    } else {\n      if (currentScore > highScore) setHighScore(currentScore);\n      setCurrentScore(0);\n      setClickedList([]);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <div className=\"title\">\n          <h1>Logo Memory Game</h1>\n          <h2>Don't click the same icon twice!</h2>\n        </div>\n        <Scoreboard currentScore={currentScore} highScore={highScore} />\n      </div>\n      <Board onCardClick={handleCardClick} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}